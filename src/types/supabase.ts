// This file can be auto-generated by Supabase CLI: npx supabase gen types typescript --project-id ywbhdhptvmulflrhhavcs > src/types/supabase.ts
// For now, we'll define it manually based on the SQL provided.

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export type Database = {
  public: {
    Tables: {
      questions: {
        Row: {
          id: number
          question: string
          answers: Json // Supabase stores this as JSONB, will be string[] in app
          correct_answer_index: number
          explanation: string
          created_at: string
        }
        Insert: {
          id?: number
          question: string
          answers: Json // Expect string[] to be stringified before insert
          correct_answer_index: number
          explanation: string
          created_at?: string
        }
        Update: {
          id?: number
          question?: string
          answers?: Json
          correct_answer_index?: number
          explanation?: string
          created_at?: string
        }
        Relationships: []
      }
      quiz_submissions: {
        Row: {
          id: number
          user_identifier: string | null
          score: number
          total_questions: number
          submitted_at: string
          // answered_questions: Json | null
        }
        Insert: {
          id?: number
          user_identifier?: string | null
          score: number
          total_questions: number
          submitted_at?: string
          // answered_questions?: Json | null
        }
        Update: {
          id?: number
          user_identifier?: string | null
          score?: number
          total_questions?: number
          submitted_at?: string
          // answered_questions?: Json | null
        }
        Relationships: []
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      [_ in never]: never
    }
    CompositeTypes: {
      [_ in never]: never
    }
  }
}

// Helper type to extract Row type from a table
export type Tables<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Row']
// Helper type to extract Insert type from a table
export type TablesInsert<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Insert']
// Helper type to extract Update type from a table
export type TablesUpdate<T extends keyof Database['public']['Tables']> = Database['public']['Tables'][T]['Update']
